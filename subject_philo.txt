# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    subject_philo.txt                                  :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: tigerber <tigerber@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2021/10/28 15:09:50 by tigerber          #+#    #+#              #
#    Updated: 2021/10/28 15:45:22 by tigerber         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Chapitre III
Aperçu
Ce que vous devez comprendre pour réussir ce projet :
• Un ou plusieurs philosophes sont assis à une table ronde soit en train de manger, soit en pensant,
soit dormir. Pendant qu'ils mangent, ils ne pensent pas et ne dorment pas ; en pensant
ils ne mangent pas et ne dorment pas ; et, bien sûr, pendant leur sommeil, ils ne mangent ni ne pensent.
• Les philosophes sont assis à une table circulaire avec un grand bol de spaghetti au centre.
• Il y a des fourchettes sur la table. Servir et manger des spaghettis avec une seule fourchette
est très gênant, alors les philosophes mangeront avec deux fourchettes, une pour chaque main.
• Chaque fois qu'un philosophe finit de manger, il laisse tomber ses fourchettes et commence à dormir.
Une fois qu'ils auront fini de dormir, ils commenceront à réfléchir. La simulation s'arrête
quand un philosophe meurt.
• Chaque philosophe a besoin de manger et il ne devrait jamais mourir de faim.
• Les philosophes ne se parlent pas.
• Les philosophes ne savent pas quand un autre philosophe est sur le point de mourir.
• Inutile de dire que les philosophes doivent éviter de mourir !

Chapitre IV
Instructions générales
Vous devez écrire un programme pour la partie obligatoire et un autre pour la partie bonus
mais ils auront les mêmes règles de base :
• Les variables globales sont interdites !
• Le programme doit prendre les arguments suivants : nombre_de_philosophes time_to_die
time_to_eat time_to_sleep [number_of_times_each_philosopher_must_eat]
nombre_de_philosophes : est le nombre de philosophes et aussi le nombre
de fourches.
◦ time_to_die : est en millisecondes, si un philosophe ne commence pas à manger 'time_to_die'
millisecondes après avoir commencé leur dernier repas ou le début de la simulation,
il meurt.
◦ time_to_eat : est en millisecondes et est le temps qu'il faut à un philosophe pour
manger. Pendant ce temps, ils devront garder les deux fourchettes.
◦ time_to_sleep : est en millisecondes et est le temps que le philosophe passera
en train de dormir.
number_of_times_each_philosopher_must_eat : l'argument est facultatif, si tous
les philosophes mangent au moins 'number_of_time_each_philosopher_must_eat' le
la simulation s'arrêtera. Si non précisé, la simulation ne s'arrêtera qu'au décès
d'un philosophe.
• Chaque philosophe doit recevoir un numéro de 1 à « nombre_de_philosophes ».
• Le philosophe numéro 1 est à côté du numéro de philosophe « nombre_de_philosophes ».
Tout autre philosophe portant le nombre N est assis entre le philosophe N - 1 et
philosophe N+1.
A propos des logs de votre programme :
• Tout changement de statut d'un philosophe doit s'écrire comme suit (avec X remplacé
avec le numéro de philosophe et timestamp_in_ms l'horodatage actuel en millisecondes) :
◦ timestamp_in_ms X a pris une fourchette
◦ timestamp_in_ms X mange
◦ timestamp_in_ms X dort
◦ timestamp_in_ms X pense
◦ timestamp_in_ms X est mort
• Le statut imprimé ne doit pas être brouillé ou entrelacé avec le statut d'un autre philosophe.
• Vous ne pouvez pas avoir plus de 10 ms entre la mort d'un philosophe et le moment où il
imprimera sa mort.
• Encore une fois, les philosophes devraient éviter de mourir !

Chapitre V
Partie obligatoire
Nom du programme philo
Remettre les fichiers philo/
Makefile Oui
Arguments number_of_philosophers time_to_die time_to_eat
time_to_sleep [number_of_times_each_philosopher_must_eat]
Fonctions externes. memset, printf, malloc, gratuit, écrire,
usleep, gettimeofday, pthread_create,
pthread_detach, pthread_join, pthread_mutex_init,
pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_unlock
Libft autorisé Non
Description philosophe avec fils et mutex
Les règles spécifiques pour la partie obligatoire sont :
• Chaque philosophe doit être un fil.
• Une fourchette entre chaque philosophe, donc s'il y a plusieurs philosophes, il y a
sera une fourchette à droite et à gauche de chaque philosophe.
• Pour éviter que les philosophes dupliquent les fourchettes, vous devez protéger l'état des fourchettes avec un
mutex pour chacun d'eux.